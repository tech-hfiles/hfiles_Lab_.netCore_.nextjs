// <auto-generated />
using System;
using HFiles_Backend.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HFilesBackend.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250523175625_AddLabMemberTable")]
    partial class AddLabMemberTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HFiles_Backend.Domain.Entities.Labs.LabAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("EpochTime")
                        .HasColumnType("bigint");

                    b.Property<int>("IsMain")
                        .HasColumnType("int");

                    b.Property<int>("LabId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LabAdmins");
                });

            modelBuilder.Entity("HFiles_Backend.Domain.Entities.Labs.LabMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<long>("EpochTime")
                        .HasColumnType("bigint");

                    b.Property<int>("LabId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LabMembers");
                });

            modelBuilder.Entity("HFiles_Backend.Domain.Entities.Labs.LabOtpEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ExpiryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OtpCode")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LabOtpEntries");
                });

            modelBuilder.Entity("HFiles_Backend.Domain.Entities.Labs.LabSignupUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("CreatedAtEpoch")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HFID")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LabName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LabReference")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("HFID")
                        .IsUnique();

                    b.ToTable("LabSignupUsers");
                });

            modelBuilder.Entity("HFiles_Backend.Domain.Entities.Labs.LabUserReports", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<long>("EpochTime")
                        .HasColumnType("bigint");

                    b.Property<int>("LabId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Resend")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LabUserReports");
                });

            modelBuilder.Entity("HFiles_Backend.Domain.Entities.Labs.UserDetails", b =>
                {
                    b.Property<string>("user_email")
                        .HasColumnType("longtext");

                    b.Property<string>("user_firstname")
                        .HasColumnType("longtext");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<string>("user_image")
                        .HasColumnType("longtext");

                    b.Property<string>("user_lastname")
                        .HasColumnType("longtext");

                    b.Property<string>("user_membernumber")
                        .HasColumnType("longtext");

                    b.Property<string>("user_reference")
                        .HasColumnType("longtext");

                    b.ToTable("user_details");
                });

            modelBuilder.Entity("HFiles_Backend.Domain.Entities.Labs.UserReports", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccessMappingId")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("FileSize")
                        .HasColumnType("double");

                    b.Property<string>("IsActive")
                        .HasColumnType("longtext");

                    b.Property<int>("LabId")
                        .HasColumnType("int");

                    b.Property<int?>("LabUserReportId")
                        .HasColumnType("int");

                    b.Property<string>("MemberId")
                        .HasColumnType("longtext");

                    b.Property<string>("NewIsActive")
                        .HasColumnType("longtext");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<string>("ReportName")
                        .HasColumnType("longtext");

                    b.Property<string>("ReportUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadType")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("longtext")
                        .HasColumnName("UploadedBy");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("user_reports");
                });
#pragma warning restore 612, 618
        }
    }
}
